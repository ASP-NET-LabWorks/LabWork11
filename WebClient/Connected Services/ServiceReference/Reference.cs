//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://azvm.ru/", ConfigurationName="ServiceReference.TestServiceSoap")]
    public interface TestServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/GetMemory", ReplyAction="*")]
        int GetMemory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/GetMemory", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetMemoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/SetMemory", ReplyAction="*")]
        void SetMemory(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/SetMemory", ReplyAction="*")]
        System.Threading.Tasks.Task SetMemoryAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/GetApp", ReplyAction="*")]
        int GetApp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/GetApp", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetAppAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/SetApp", ReplyAction="*")]
        void SetApp(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/SetApp", ReplyAction="*")]
        System.Threading.Tasks.Task SetAppAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Add", ReplyAction="*")]
        int Add(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Add", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Subtract", ReplyAction="*")]
        int Subtract(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Subtract", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SubtractAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Multiply", ReplyAction="*")]
        int Multiply(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://azvm.ru/Multiply", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TestServiceSoapChannel : WebClient.ServiceReference.TestServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceSoapClient : System.ServiceModel.ClientBase<WebClient.ServiceReference.TestServiceSoap>, WebClient.ServiceReference.TestServiceSoap {
        
        public TestServiceSoapClient() {
        }
        
        public TestServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetMemory() {
            return base.Channel.GetMemory();
        }
        
        public System.Threading.Tasks.Task<int> GetMemoryAsync() {
            return base.Channel.GetMemoryAsync();
        }
        
        public void SetMemory(int value) {
            base.Channel.SetMemory(value);
        }
        
        public System.Threading.Tasks.Task SetMemoryAsync(int value) {
            return base.Channel.SetMemoryAsync(value);
        }
        
        public int GetApp() {
            return base.Channel.GetApp();
        }
        
        public System.Threading.Tasks.Task<int> GetAppAsync() {
            return base.Channel.GetAppAsync();
        }
        
        public void SetApp(int value) {
            base.Channel.SetApp(value);
        }
        
        public System.Threading.Tasks.Task SetAppAsync(int value) {
            return base.Channel.SetAppAsync(value);
        }
        
        public int Add(int a, int b) {
            return base.Channel.Add(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int a, int b) {
            return base.Channel.AddAsync(a, b);
        }
        
        public int Subtract(int a, int b) {
            return base.Channel.Subtract(a, b);
        }
        
        public System.Threading.Tasks.Task<int> SubtractAsync(int a, int b) {
            return base.Channel.SubtractAsync(a, b);
        }
        
        public int Multiply(int a, int b) {
            return base.Channel.Multiply(a, b);
        }
        
        public System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b) {
            return base.Channel.MultiplyAsync(a, b);
        }
    }
}
